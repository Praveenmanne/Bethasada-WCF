//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BethesdaConsentFormWCFSvc.DocumentConverterService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OpenOptions", Namespace="http://types.muhimbi.com/2009/10/06")]
    [System.SerializableAttribute()]
    public partial class OpenOptions : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileExtensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OriginalFileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RefreshContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowExternalConnectionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaConsentFormWCFSvc.DocumentConverterService.MacroSecurityOption AllowMacrosField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string FileExtension {
            get {
                return this.FileExtensionField;
            }
            set {
                if ((object.ReferenceEquals(this.FileExtensionField, value) != true)) {
                    this.FileExtensionField = value;
                    this.RaisePropertyChanged("FileExtension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string OriginalFileName {
            get {
                return this.OriginalFileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginalFileNameField, value) != true)) {
                    this.OriginalFileNameField = value;
                    this.RaisePropertyChanged("OriginalFileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public bool RefreshContent {
            get {
                return this.RefreshContentField;
            }
            set {
                if ((this.RefreshContentField.Equals(value) != true)) {
                    this.RefreshContentField = value;
                    this.RaisePropertyChanged("RefreshContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public bool AllowExternalConnections {
            get {
                return this.AllowExternalConnectionsField;
            }
            set {
                if ((this.AllowExternalConnectionsField.Equals(value) != true)) {
                    this.AllowExternalConnectionsField = value;
                    this.RaisePropertyChanged("AllowExternalConnections");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public BethesdaConsentFormWCFSvc.DocumentConverterService.MacroSecurityOption AllowMacros {
            get {
                return this.AllowMacrosField;
            }
            set {
                if ((this.AllowMacrosField.Equals(value) != true)) {
                    this.AllowMacrosField = value;
                    this.RaisePropertyChanged("AllowMacros");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MacroSecurityOption", Namespace="http://schemas.datacontract.org/2004/07/Muhimbi.DocumentConverter.WebService.Data" +
        "")]
    public enum MacroSecurityOption : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SignedOnly = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConversionSettings", Namespace="http://types.muhimbi.com/2009/10/06")]
    [System.SerializableAttribute()]
    public partial class ConversionSettings : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaConsentFormWCFSvc.DocumentConverterService.OutputFormat FormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StartPageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EndPageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaConsentFormWCFSvc.DocumentConverterService.ConversionRange RangeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaConsentFormWCFSvc.DocumentConverterService.ConversionQuality QualityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaConsentFormWCFSvc.DocumentConverterService.PDFProfile PDFProfileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OpenPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaConsentFormWCFSvc.DocumentConverterService.SecurityOptions SecurityOptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaConsentFormWCFSvc.DocumentConverterService.ConversionFidelities FidelityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaConsentFormWCFSvc.DocumentConverterService.BookmarkGenerationOption GenerateBookmarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaConsentFormWCFSvc.DocumentConverterService.Watermark[] WatermarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaConsentFormWCFSvc.DocumentConverterService.PageOrientation PageOrientationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaConsentFormWCFSvc.DocumentConverterService.ConverterSpecificSettings ConverterSpecificSettingsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BethesdaConsentFormWCFSvc.DocumentConverterService.OutputFormat Format {
            get {
                return this.FormatField;
            }
            set {
                if ((this.FormatField.Equals(value) != true)) {
                    this.FormatField = value;
                    this.RaisePropertyChanged("Format");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StartPage {
            get {
                return this.StartPageField;
            }
            set {
                if ((this.StartPageField.Equals(value) != true)) {
                    this.StartPageField = value;
                    this.RaisePropertyChanged("StartPage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int EndPage {
            get {
                return this.EndPageField;
            }
            set {
                if ((this.EndPageField.Equals(value) != true)) {
                    this.EndPageField = value;
                    this.RaisePropertyChanged("EndPage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public BethesdaConsentFormWCFSvc.DocumentConverterService.ConversionRange Range {
            get {
                return this.RangeField;
            }
            set {
                if ((this.RangeField.Equals(value) != true)) {
                    this.RangeField = value;
                    this.RaisePropertyChanged("Range");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public BethesdaConsentFormWCFSvc.DocumentConverterService.ConversionQuality Quality {
            get {
                return this.QualityField;
            }
            set {
                if ((this.QualityField.Equals(value) != true)) {
                    this.QualityField = value;
                    this.RaisePropertyChanged("Quality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public BethesdaConsentFormWCFSvc.DocumentConverterService.PDFProfile PDFProfile {
            get {
                return this.PDFProfileField;
            }
            set {
                if ((this.PDFProfileField.Equals(value) != true)) {
                    this.PDFProfileField = value;
                    this.RaisePropertyChanged("PDFProfile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string OpenPassword {
            get {
                return this.OpenPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.OpenPasswordField, value) != true)) {
                    this.OpenPasswordField = value;
                    this.RaisePropertyChanged("OpenPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public string OwnerPassword {
            get {
                return this.OwnerPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerPasswordField, value) != true)) {
                    this.OwnerPasswordField = value;
                    this.RaisePropertyChanged("OwnerPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public BethesdaConsentFormWCFSvc.DocumentConverterService.SecurityOptions SecurityOptions {
            get {
                return this.SecurityOptionsField;
            }
            set {
                if ((this.SecurityOptionsField.Equals(value) != true)) {
                    this.SecurityOptionsField = value;
                    this.RaisePropertyChanged("SecurityOptions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public BethesdaConsentFormWCFSvc.DocumentConverterService.ConversionFidelities Fidelity {
            get {
                return this.FidelityField;
            }
            set {
                if ((this.FidelityField.Equals(value) != true)) {
                    this.FidelityField = value;
                    this.RaisePropertyChanged("Fidelity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public BethesdaConsentFormWCFSvc.DocumentConverterService.BookmarkGenerationOption GenerateBookmarks {
            get {
                return this.GenerateBookmarksField;
            }
            set {
                if ((this.GenerateBookmarksField.Equals(value) != true)) {
                    this.GenerateBookmarksField = value;
                    this.RaisePropertyChanged("GenerateBookmarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public BethesdaConsentFormWCFSvc.DocumentConverterService.Watermark[] Watermarks {
            get {
                return this.WatermarksField;
            }
            set {
                if ((object.ReferenceEquals(this.WatermarksField, value) != true)) {
                    this.WatermarksField = value;
                    this.RaisePropertyChanged("Watermarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public BethesdaConsentFormWCFSvc.DocumentConverterService.PageOrientation PageOrientation {
            get {
                return this.PageOrientationField;
            }
            set {
                if ((this.PageOrientationField.Equals(value) != true)) {
                    this.PageOrientationField = value;
                    this.RaisePropertyChanged("PageOrientation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public BethesdaConsentFormWCFSvc.DocumentConverterService.ConverterSpecificSettings ConverterSpecificSettings {
            get {
                return this.ConverterSpecificSettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.ConverterSpecificSettingsField, value) != true)) {
                    this.ConverterSpecificSettingsField = value;
                    this.RaisePropertyChanged("ConverterSpecificSettings");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConverterSpecificSettings", Namespace="http://types.muhimbi.com/2010/11/22")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BethesdaConsentFormWCFSvc.DocumentConverterService.ConverterSpecificSettings_Presentations))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BethesdaConsentFormWCFSvc.DocumentConverterService.ConverterSpecificSettings_CommandLineConverter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BethesdaConsentFormWCFSvc.DocumentConverterService.ConverterSpecificSettings_Cad))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BethesdaConsentFormWCFSvc.DocumentConverterService.ConverterSpecificSettings_HTML))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BethesdaConsentFormWCFSvc.DocumentConverterService.ConverterSpecificSettings_InfoPath))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BethesdaConsentFormWCFSvc.DocumentConverterService.ConverterSpecificSettings_WordProcessing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BethesdaConsentFormWCFSvc.DocumentConverterService.ConverterSpecificSettings_MSG))]
    public partial class ConverterSpecificSettings : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OutputFormat", Namespace="http://schemas.datacontract.org/2004/07/Muhimbi.DocumentConverter.WebService.Data" +
        "")]
    public enum OutputFormat : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PDF = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XPS = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOCX = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOC = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ODT = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RTF = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TXT = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MHT = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HTML = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XML = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XLS = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XLSX = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CSV = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ODS = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PPT = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PPTX = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ODP = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PPS = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PPSX = 18,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConversionRange", Namespace="http://schemas.datacontract.org/2004/07/Muhimbi.DocumentConverter.WebService.Data" +
        "")]
    public enum ConversionRange : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VisibleDocuments = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllDocuments = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ActiveDocuments = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConversionQuality", Namespace="http://schemas.datacontract.org/2004/07/Muhimbi.DocumentConverter.WebService.Data" +
        "")]
    public enum ConversionQuality : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OptimizeForPrint = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OptimizeForOnScreen = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PDFProfile", Namespace="http://schemas.datacontract.org/2004/07/Muhimbi.DocumentConverter.WebService.Data" +
        "")]
    public enum PDFProfile : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PDF_1_5 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PDF_A1B = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="SecurityOptions", Namespace="http://schemas.datacontract.org/2004/07/Muhimbi.DocumentConverter.WebService.Data" +
        "")]
    public enum SecurityOptions : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisablePrint = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisableHighResolutionPrint = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisableContentCopy = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisableAnotations = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisableFormFields = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisableContentAccessibility = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisableDocumentAssembly = 64,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConversionFidelities", Namespace="http://schemas.datacontract.org/2004/07/Muhimbi.DocumentConverter.WebService.Data" +
        "")]
    public enum ConversionFidelities : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        High = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Full = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BookmarkGenerationOption", Namespace="http://schemas.datacontract.org/2004/07/Muhimbi.DocumentConverter.WebService.Data" +
        "")]
    public enum BookmarkGenerationOption : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Disabled = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Automatic = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Custom = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Watermark", Namespace="http://types.muhimbi.com/2010/05/17")]
    [System.SerializableAttribute()]
    public partial class Watermark : BethesdaConsentFormWCFSvc.DocumentConverterService.Container {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaConsentFormWCFSvc.DocumentConverterService.PageOrientation PageOrientationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StartPageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EndPageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageIntervalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PageRangeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BethesdaConsentFormWCFSvc.DocumentConverterService.PageOrientation PageOrientation {
            get {
                return this.PageOrientationField;
            }
            set {
                if ((this.PageOrientationField.Equals(value) != true)) {
                    this.PageOrientationField = value;
                    this.RaisePropertyChanged("PageOrientation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StartPage {
            get {
                return this.StartPageField;
            }
            set {
                if ((this.StartPageField.Equals(value) != true)) {
                    this.StartPageField = value;
                    this.RaisePropertyChanged("StartPage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int EndPage {
            get {
                return this.EndPageField;
            }
            set {
                if ((this.EndPageField.Equals(value) != true)) {
                    this.EndPageField = value;
                    this.RaisePropertyChanged("EndPage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int PageInterval {
            get {
                return this.PageIntervalField;
            }
            set {
                if ((this.PageIntervalField.Equals(value) != true)) {
                    this.PageIntervalField = value;
                    this.RaisePropertyChanged("PageInterval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string PageRange {
            get {
                return this.PageRangeField;
            }
            set {
                if ((object.ReferenceEquals(this.PageRangeField, value) != true)) {
                    this.PageRangeField = value;
                    this.RaisePropertyChanged("PageRange");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PageOrientation", Namespace="http://schemas.datacontract.org/2004/07/Muhimbi.DocumentConverter.WebService.Data" +
        ".Graphics")]
    public enum PageOrientation : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Default = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Portrait = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Landscape = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Both = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Element", Namespace="http://types.muhimbi.com/2010/05/17")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BethesdaConsentFormWCFSvc.DocumentConverterService.Ellipse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BethesdaConsentFormWCFSvc.DocumentConverterService.Image))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BethesdaConsentFormWCFSvc.DocumentConverterService.Line))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BethesdaConsentFormWCFSvc.DocumentConverterService.Rectangle))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BethesdaConsentFormWCFSvc.DocumentConverterService.Text))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BethesdaConsentFormWCFSvc.DocumentConverterService.Pdf))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BethesdaConsentFormWCFSvc.DocumentConverterService.Rtf))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BethesdaConsentFormWCFSvc.DocumentConverterService.Container))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BethesdaConsentFormWCFSvc.DocumentConverterService.Watermark))]
    public partial class Element : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaConsentFormWCFSvc.DocumentConverterService.HPosition HPositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaConsentFormWCFSvc.DocumentConverterService.VPosition VPositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string YField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WidthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ZOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaConsentFormWCFSvc.DocumentConverterService.ScaleMode ScaleModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ScaleXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ScaleYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RotationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransparencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LineColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LineWidthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FillColorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BethesdaConsentFormWCFSvc.DocumentConverterService.HPosition HPosition {
            get {
                return this.HPositionField;
            }
            set {
                if ((this.HPositionField.Equals(value) != true)) {
                    this.HPositionField = value;
                    this.RaisePropertyChanged("HPosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BethesdaConsentFormWCFSvc.DocumentConverterService.VPosition VPosition {
            get {
                return this.VPositionField;
            }
            set {
                if ((this.VPositionField.Equals(value) != true)) {
                    this.VPositionField = value;
                    this.RaisePropertyChanged("VPosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string X {
            get {
                return this.XField;
            }
            set {
                if ((object.ReferenceEquals(this.XField, value) != true)) {
                    this.XField = value;
                    this.RaisePropertyChanged("X");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Y {
            get {
                return this.YField;
            }
            set {
                if ((object.ReferenceEquals(this.YField, value) != true)) {
                    this.YField = value;
                    this.RaisePropertyChanged("Y");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string Width {
            get {
                return this.WidthField;
            }
            set {
                if ((object.ReferenceEquals(this.WidthField, value) != true)) {
                    this.WidthField = value;
                    this.RaisePropertyChanged("Width");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string Height {
            get {
                return this.HeightField;
            }
            set {
                if ((object.ReferenceEquals(this.HeightField, value) != true)) {
                    this.HeightField = value;
                    this.RaisePropertyChanged("Height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public int ZOrder {
            get {
                return this.ZOrderField;
            }
            set {
                if ((this.ZOrderField.Equals(value) != true)) {
                    this.ZOrderField = value;
                    this.RaisePropertyChanged("ZOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public BethesdaConsentFormWCFSvc.DocumentConverterService.ScaleMode ScaleMode {
            get {
                return this.ScaleModeField;
            }
            set {
                if ((this.ScaleModeField.Equals(value) != true)) {
                    this.ScaleModeField = value;
                    this.RaisePropertyChanged("ScaleMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public string ScaleX {
            get {
                return this.ScaleXField;
            }
            set {
                if ((object.ReferenceEquals(this.ScaleXField, value) != true)) {
                    this.ScaleXField = value;
                    this.RaisePropertyChanged("ScaleX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public string ScaleY {
            get {
                return this.ScaleYField;
            }
            set {
                if ((object.ReferenceEquals(this.ScaleYField, value) != true)) {
                    this.ScaleYField = value;
                    this.RaisePropertyChanged("ScaleY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public string Rotation {
            get {
                return this.RotationField;
            }
            set {
                if ((object.ReferenceEquals(this.RotationField, value) != true)) {
                    this.RotationField = value;
                    this.RaisePropertyChanged("Rotation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public string Transparency {
            get {
                return this.TransparencyField;
            }
            set {
                if ((object.ReferenceEquals(this.TransparencyField, value) != true)) {
                    this.TransparencyField = value;
                    this.RaisePropertyChanged("Transparency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public string LineColor {
            get {
                return this.LineColorField;
            }
            set {
                if ((object.ReferenceEquals(this.LineColorField, value) != true)) {
                    this.LineColorField = value;
                    this.RaisePropertyChanged("LineColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public string LineWidth {
            get {
                return this.LineWidthField;
            }
            set {
                if ((object.ReferenceEquals(this.LineWidthField, value) != true)) {
                    this.LineWidthField = value;
                    this.RaisePropertyChanged("LineWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=14)]
        public string FillColor {
            get {
                return this.FillColorField;
            }
            set {
                if ((object.ReferenceEquals(this.FillColorField, value) != true)) {
                    this.FillColorField = value;
                    this.RaisePropertyChanged("FillColor");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Ellipse", Namespace="http://types.muhimbi.com/2010/05/17")]
    [System.SerializableAttribute()]
    public partial class Ellipse : BethesdaConsentFormWCFSvc.DocumentConverterService.Element {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Image", Namespace="http://types.muhimbi.com/2010/05/17")]
    [System.SerializableAttribute()]
    public partial class Image : BethesdaConsentFormWCFSvc.DocumentConverterService.Element {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ImageDataField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] ImageData {
            get {
                return this.ImageDataField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageDataField, value) != true)) {
                    this.ImageDataField = value;
                    this.RaisePropertyChanged("ImageData");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Line", Namespace="http://types.muhimbi.com/2010/05/17")]
    [System.SerializableAttribute()]
    public partial class Line : BethesdaConsentFormWCFSvc.DocumentConverterService.Element {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndYField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndX {
            get {
                return this.EndXField;
            }
            set {
                if ((object.ReferenceEquals(this.EndXField, value) != true)) {
                    this.EndXField = value;
                    this.RaisePropertyChanged("EndX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndY {
            get {
                return this.EndYField;
            }
            set {
                if ((object.ReferenceEquals(this.EndYField, value) != true)) {
                    this.EndYField = value;
                    this.RaisePropertyChanged("EndY");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Rectangle", Namespace="http://types.muhimbi.com/2010/05/17")]
    [System.SerializableAttribute()]
    public partial class Rectangle : BethesdaConsentFormWCFSvc.DocumentConverterService.Element {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Text", Namespace="http://types.muhimbi.com/2010/05/17")]
    [System.SerializableAttribute()]
    public partial class Text : BethesdaConsentFormWCFSvc.DocumentConverterService.Element {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FontFamilyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FontSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaConsentFormWCFSvc.DocumentConverterService.FontStyle FontStyleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaConsentFormWCFSvc.DocumentConverterService.WordWrap WordWrapField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaConsentFormWCFSvc.DocumentConverterService.HAlign HAlignField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaConsentFormWCFSvc.DocumentConverterService.VAlign VAlignField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FontFamilyName {
            get {
                return this.FontFamilyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FontFamilyNameField, value) != true)) {
                    this.FontFamilyNameField = value;
                    this.RaisePropertyChanged("FontFamilyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FontSize {
            get {
                return this.FontSizeField;
            }
            set {
                if ((object.ReferenceEquals(this.FontSizeField, value) != true)) {
                    this.FontSizeField = value;
                    this.RaisePropertyChanged("FontSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BethesdaConsentFormWCFSvc.DocumentConverterService.FontStyle FontStyle {
            get {
                return this.FontStyleField;
            }
            set {
                if ((this.FontStyleField.Equals(value) != true)) {
                    this.FontStyleField = value;
                    this.RaisePropertyChanged("FontStyle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BethesdaConsentFormWCFSvc.DocumentConverterService.WordWrap WordWrap {
            get {
                return this.WordWrapField;
            }
            set {
                if ((this.WordWrapField.Equals(value) != true)) {
                    this.WordWrapField = value;
                    this.RaisePropertyChanged("WordWrap");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public BethesdaConsentFormWCFSvc.DocumentConverterService.HAlign HAlign {
            get {
                return this.HAlignField;
            }
            set {
                if ((this.HAlignField.Equals(value) != true)) {
                    this.HAlignField = value;
                    this.RaisePropertyChanged("HAlign");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public BethesdaConsentFormWCFSvc.DocumentConverterService.VAlign VAlign {
            get {
                return this.VAlignField;
            }
            set {
                if ((this.VAlignField.Equals(value) != true)) {
                    this.VAlignField = value;
                    this.RaisePropertyChanged("VAlign");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Pdf", Namespace="http://types.muhimbi.com/2010/05/17")]
    [System.SerializableAttribute()]
    public partial class Pdf : BethesdaConsentFormWCFSvc.DocumentConverterService.Element {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] PdfDataField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] PdfData {
            get {
                return this.PdfDataField;
            }
            set {
                if ((object.ReferenceEquals(this.PdfDataField, value) != true)) {
                    this.PdfDataField = value;
                    this.RaisePropertyChanged("PdfData");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Rtf", Namespace="http://types.muhimbi.com/2010/05/17")]
    [System.SerializableAttribute()]
    public partial class Rtf : BethesdaConsentFormWCFSvc.DocumentConverterService.Element {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RtfDataField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RtfData {
            get {
                return this.RtfDataField;
            }
            set {
                if ((object.ReferenceEquals(this.RtfDataField, value) != true)) {
                    this.RtfDataField = value;
                    this.RaisePropertyChanged("RtfData");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Container", Namespace="http://types.muhimbi.com/2010/05/17")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BethesdaConsentFormWCFSvc.DocumentConverterService.Watermark))]
    public partial class Container : BethesdaConsentFormWCFSvc.DocumentConverterService.Element {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaConsentFormWCFSvc.DocumentConverterService.Element[] ElementsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaConsentFormWCFSvc.DocumentConverterService.Defaults DefaultsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BethesdaConsentFormWCFSvc.DocumentConverterService.Element[] Elements {
            get {
                return this.ElementsField;
            }
            set {
                if ((object.ReferenceEquals(this.ElementsField, value) != true)) {
                    this.ElementsField = value;
                    this.RaisePropertyChanged("Elements");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public BethesdaConsentFormWCFSvc.DocumentConverterService.Defaults Defaults {
            get {
                return this.DefaultsField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultsField, value) != true)) {
                    this.DefaultsField = value;
                    this.RaisePropertyChanged("Defaults");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HPosition", Namespace="http://schemas.datacontract.org/2004/07/Muhimbi.DocumentConverter.WebService.Data" +
        ".Graphics")]
    public enum HPosition : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Default = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Absolute = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Random = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Left = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Center = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Right = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VPosition", Namespace="http://schemas.datacontract.org/2004/07/Muhimbi.DocumentConverter.WebService.Data" +
        ".Graphics")]
    public enum VPosition : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Default = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Absolute = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Random = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Top = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Middle = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Bottom = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScaleMode", Namespace="http://schemas.datacontract.org/2004/07/Muhimbi.DocumentConverter.WebService.Data" +
        ".Graphics")]
    public enum ScaleMode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Default = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Absolute = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MaintainAspectRatio = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExactFit = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Defaults", Namespace="http://types.muhimbi.com/2010/05/17")]
    [System.SerializableAttribute()]
    public partial class Defaults : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaConsentFormWCFSvc.DocumentConverterService.HPosition HPositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaConsentFormWCFSvc.DocumentConverterService.VPosition VPositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string YField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RotationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransparencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LineColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LineWidthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FillColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FontFamilyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FontSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaConsentFormWCFSvc.DocumentConverterService.FontStyle FontStyleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaConsentFormWCFSvc.DocumentConverterService.HAlign HAlignField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaConsentFormWCFSvc.DocumentConverterService.VAlign VAlignField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaConsentFormWCFSvc.DocumentConverterService.WordWrap WordWrapField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaConsentFormWCFSvc.DocumentConverterService.ScaleMode ScaleModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ScaleXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ScaleYField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BethesdaConsentFormWCFSvc.DocumentConverterService.HPosition HPosition {
            get {
                return this.HPositionField;
            }
            set {
                if ((this.HPositionField.Equals(value) != true)) {
                    this.HPositionField = value;
                    this.RaisePropertyChanged("HPosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BethesdaConsentFormWCFSvc.DocumentConverterService.VPosition VPosition {
            get {
                return this.VPositionField;
            }
            set {
                if ((this.VPositionField.Equals(value) != true)) {
                    this.VPositionField = value;
                    this.RaisePropertyChanged("VPosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string X {
            get {
                return this.XField;
            }
            set {
                if ((object.ReferenceEquals(this.XField, value) != true)) {
                    this.XField = value;
                    this.RaisePropertyChanged("X");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Y {
            get {
                return this.YField;
            }
            set {
                if ((object.ReferenceEquals(this.YField, value) != true)) {
                    this.YField = value;
                    this.RaisePropertyChanged("Y");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string Rotation {
            get {
                return this.RotationField;
            }
            set {
                if ((object.ReferenceEquals(this.RotationField, value) != true)) {
                    this.RotationField = value;
                    this.RaisePropertyChanged("Rotation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string Transparency {
            get {
                return this.TransparencyField;
            }
            set {
                if ((object.ReferenceEquals(this.TransparencyField, value) != true)) {
                    this.TransparencyField = value;
                    this.RaisePropertyChanged("Transparency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string LineColor {
            get {
                return this.LineColorField;
            }
            set {
                if ((object.ReferenceEquals(this.LineColorField, value) != true)) {
                    this.LineColorField = value;
                    this.RaisePropertyChanged("LineColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public string LineWidth {
            get {
                return this.LineWidthField;
            }
            set {
                if ((object.ReferenceEquals(this.LineWidthField, value) != true)) {
                    this.LineWidthField = value;
                    this.RaisePropertyChanged("LineWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public string FillColor {
            get {
                return this.FillColorField;
            }
            set {
                if ((object.ReferenceEquals(this.FillColorField, value) != true)) {
                    this.FillColorField = value;
                    this.RaisePropertyChanged("FillColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public string FontFamilyName {
            get {
                return this.FontFamilyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FontFamilyNameField, value) != true)) {
                    this.FontFamilyNameField = value;
                    this.RaisePropertyChanged("FontFamilyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public string FontSize {
            get {
                return this.FontSizeField;
            }
            set {
                if ((object.ReferenceEquals(this.FontSizeField, value) != true)) {
                    this.FontSizeField = value;
                    this.RaisePropertyChanged("FontSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public BethesdaConsentFormWCFSvc.DocumentConverterService.FontStyle FontStyle {
            get {
                return this.FontStyleField;
            }
            set {
                if ((this.FontStyleField.Equals(value) != true)) {
                    this.FontStyleField = value;
                    this.RaisePropertyChanged("FontStyle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public BethesdaConsentFormWCFSvc.DocumentConverterService.HAlign HAlign {
            get {
                return this.HAlignField;
            }
            set {
                if ((this.HAlignField.Equals(value) != true)) {
                    this.HAlignField = value;
                    this.RaisePropertyChanged("HAlign");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public BethesdaConsentFormWCFSvc.DocumentConverterService.VAlign VAlign {
            get {
                return this.VAlignField;
            }
            set {
                if ((this.VAlignField.Equals(value) != true)) {
                    this.VAlignField = value;
                    this.RaisePropertyChanged("VAlign");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=14)]
        public BethesdaConsentFormWCFSvc.DocumentConverterService.WordWrap WordWrap {
            get {
                return this.WordWrapField;
            }
            set {
                if ((this.WordWrapField.Equals(value) != true)) {
                    this.WordWrapField = value;
                    this.RaisePropertyChanged("WordWrap");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=15)]
        public BethesdaConsentFormWCFSvc.DocumentConverterService.ScaleMode ScaleMode {
            get {
                return this.ScaleModeField;
            }
            set {
                if ((this.ScaleModeField.Equals(value) != true)) {
                    this.ScaleModeField = value;
                    this.RaisePropertyChanged("ScaleMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=16)]
        public string ScaleX {
            get {
                return this.ScaleXField;
            }
            set {
                if ((object.ReferenceEquals(this.ScaleXField, value) != true)) {
                    this.ScaleXField = value;
                    this.RaisePropertyChanged("ScaleX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=17)]
        public string ScaleY {
            get {
                return this.ScaleYField;
            }
            set {
                if ((object.ReferenceEquals(this.ScaleYField, value) != true)) {
                    this.ScaleYField = value;
                    this.RaisePropertyChanged("ScaleY");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="FontStyle", Namespace="http://schemas.datacontract.org/2004/07/Muhimbi.DocumentConverter.WebService.Data" +
        ".Graphics")]
    public enum FontStyle : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Default = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Regular = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Bold = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Italic = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Underline = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Strikeout = 16,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WordWrap", Namespace="http://schemas.datacontract.org/2004/07/Muhimbi.DocumentConverter.WebService.Data" +
        ".Graphics")]
    public enum WordWrap : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Default = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WordOnly = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Character = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Word = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HAlign", Namespace="http://schemas.datacontract.org/2004/07/Muhimbi.DocumentConverter.WebService.Data" +
        ".Graphics")]
    public enum HAlign : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Default = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Center = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Justify = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Left = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Right = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VAlign", Namespace="http://schemas.datacontract.org/2004/07/Muhimbi.DocumentConverter.WebService.Data" +
        ".Graphics")]
    public enum VAlign : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Default = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Middle = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Bottom = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Top = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConverterSpecificSettings_Presentations", Namespace="http://types.muhimbi.com/2010/11/22")]
    [System.SerializableAttribute()]
    public partial class ConverterSpecificSettings_Presentations : BethesdaConsentFormWCFSvc.DocumentConverterService.ConverterSpecificSettings {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaConsentFormWCFSvc.DocumentConverterService.PresentationsPrintOutputType PrintOutputTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FrameSlidesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BethesdaConsentFormWCFSvc.DocumentConverterService.PresentationsPrintOutputType PrintOutputType {
            get {
                return this.PrintOutputTypeField;
            }
            set {
                if ((this.PrintOutputTypeField.Equals(value) != true)) {
                    this.PrintOutputTypeField = value;
                    this.RaisePropertyChanged("PrintOutputType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public bool FrameSlides {
            get {
                return this.FrameSlidesField;
            }
            set {
                if ((this.FrameSlidesField.Equals(value) != true)) {
                    this.FrameSlidesField = value;
                    this.RaisePropertyChanged("FrameSlides");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConverterSpecificSettings_CommandLineConverter", Namespace="http://types.muhimbi.com/2010/11/22")]
    [System.SerializableAttribute()]
    public partial class ConverterSpecificSettings_CommandLineConverter : BethesdaConsentFormWCFSvc.DocumentConverterService.ConverterSpecificSettings {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Parameter1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Parameter2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Parameter3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Parameter4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Parameter5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Parameter6Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Parameter7Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Parameter8Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Parameter9Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Parameter10Field;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Parameter1 {
            get {
                return this.Parameter1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Parameter1Field, value) != true)) {
                    this.Parameter1Field = value;
                    this.RaisePropertyChanged("Parameter1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Parameter2 {
            get {
                return this.Parameter2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Parameter2Field, value) != true)) {
                    this.Parameter2Field = value;
                    this.RaisePropertyChanged("Parameter2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Parameter3 {
            get {
                return this.Parameter3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Parameter3Field, value) != true)) {
                    this.Parameter3Field = value;
                    this.RaisePropertyChanged("Parameter3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Parameter4 {
            get {
                return this.Parameter4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Parameter4Field, value) != true)) {
                    this.Parameter4Field = value;
                    this.RaisePropertyChanged("Parameter4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Parameter5 {
            get {
                return this.Parameter5Field;
            }
            set {
                if ((object.ReferenceEquals(this.Parameter5Field, value) != true)) {
                    this.Parameter5Field = value;
                    this.RaisePropertyChanged("Parameter5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Parameter6 {
            get {
                return this.Parameter6Field;
            }
            set {
                if ((object.ReferenceEquals(this.Parameter6Field, value) != true)) {
                    this.Parameter6Field = value;
                    this.RaisePropertyChanged("Parameter6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Parameter7 {
            get {
                return this.Parameter7Field;
            }
            set {
                if ((object.ReferenceEquals(this.Parameter7Field, value) != true)) {
                    this.Parameter7Field = value;
                    this.RaisePropertyChanged("Parameter7");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Parameter8 {
            get {
                return this.Parameter8Field;
            }
            set {
                if ((object.ReferenceEquals(this.Parameter8Field, value) != true)) {
                    this.Parameter8Field = value;
                    this.RaisePropertyChanged("Parameter8");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Parameter9 {
            get {
                return this.Parameter9Field;
            }
            set {
                if ((object.ReferenceEquals(this.Parameter9Field, value) != true)) {
                    this.Parameter9Field = value;
                    this.RaisePropertyChanged("Parameter9");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public string Parameter10 {
            get {
                return this.Parameter10Field;
            }
            set {
                if ((object.ReferenceEquals(this.Parameter10Field, value) != true)) {
                    this.Parameter10Field = value;
                    this.RaisePropertyChanged("Parameter10");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConverterSpecificSettings_Cad", Namespace="http://types.muhimbi.com/2010/11/22")]
    [System.SerializableAttribute()]
    public partial class ConverterSpecificSettings_Cad : BethesdaConsentFormWCFSvc.DocumentConverterService.ConverterSpecificSettings {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaperSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BackgroundColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ForegroundColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaConsentFormWCFSvc.DocumentConverterService.CadConversionElement[] CadConversionElementsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PageMarginsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaConsentFormWCFSvc.DocumentConverterService.CadEmptyLayoutDetectionMode EmptyLayoutDetectionModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaConsentFormWCFSvc.DocumentConverterService.CadLayoutSortOrder LayoutSortOrderField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaperSize {
            get {
                return this.PaperSizeField;
            }
            set {
                if ((object.ReferenceEquals(this.PaperSizeField, value) != true)) {
                    this.PaperSizeField = value;
                    this.RaisePropertyChanged("PaperSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string BackgroundColor {
            get {
                return this.BackgroundColorField;
            }
            set {
                if ((object.ReferenceEquals(this.BackgroundColorField, value) != true)) {
                    this.BackgroundColorField = value;
                    this.RaisePropertyChanged("BackgroundColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string ForegroundColor {
            get {
                return this.ForegroundColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ForegroundColorField, value) != true)) {
                    this.ForegroundColorField = value;
                    this.RaisePropertyChanged("ForegroundColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public BethesdaConsentFormWCFSvc.DocumentConverterService.CadConversionElement[] CadConversionElements {
            get {
                return this.CadConversionElementsField;
            }
            set {
                if ((object.ReferenceEquals(this.CadConversionElementsField, value) != true)) {
                    this.CadConversionElementsField = value;
                    this.RaisePropertyChanged("CadConversionElements");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string PageMargins {
            get {
                return this.PageMarginsField;
            }
            set {
                if ((object.ReferenceEquals(this.PageMarginsField, value) != true)) {
                    this.PageMarginsField = value;
                    this.RaisePropertyChanged("PageMargins");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public BethesdaConsentFormWCFSvc.DocumentConverterService.CadEmptyLayoutDetectionMode EmptyLayoutDetectionMode {
            get {
                return this.EmptyLayoutDetectionModeField;
            }
            set {
                if ((this.EmptyLayoutDetectionModeField.Equals(value) != true)) {
                    this.EmptyLayoutDetectionModeField = value;
                    this.RaisePropertyChanged("EmptyLayoutDetectionMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public BethesdaConsentFormWCFSvc.DocumentConverterService.CadLayoutSortOrder LayoutSortOrder {
            get {
                return this.LayoutSortOrderField;
            }
            set {
                if ((this.LayoutSortOrderField.Equals(value) != true)) {
                    this.LayoutSortOrderField = value;
                    this.RaisePropertyChanged("LayoutSortOrder");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConverterSpecificSettings_HTML", Namespace="http://types.muhimbi.com/2010/11/22")]
    [System.SerializableAttribute()]
    public partial class ConverterSpecificSettings_HTML : BethesdaConsentFormWCFSvc.DocumentConverterService.ConverterSpecificSettings {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaperSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaConsentFormWCFSvc.DocumentConverterService.HTMLScaleMode ScaleModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PageMarginsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaperSize {
            get {
                return this.PaperSizeField;
            }
            set {
                if ((object.ReferenceEquals(this.PaperSizeField, value) != true)) {
                    this.PaperSizeField = value;
                    this.RaisePropertyChanged("PaperSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BethesdaConsentFormWCFSvc.DocumentConverterService.HTMLScaleMode ScaleMode {
            get {
                return this.ScaleModeField;
            }
            set {
                if ((this.ScaleModeField.Equals(value) != true)) {
                    this.ScaleModeField = value;
                    this.RaisePropertyChanged("ScaleMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string PageMargins {
            get {
                return this.PageMarginsField;
            }
            set {
                if ((object.ReferenceEquals(this.PageMarginsField, value) != true)) {
                    this.PageMarginsField = value;
                    this.RaisePropertyChanged("PageMargins");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConverterSpecificSettings_InfoPath", Namespace="http://types.muhimbi.com/2010/11/22")]
    [System.SerializableAttribute()]
    public partial class ConverterSpecificSettings_InfoPath : BethesdaConsentFormWCFSvc.DocumentConverterService.ConverterSpecificSettings {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StripDotNETCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StripDataObjectsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ConvertAttachmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaConsentFormWCFSvc.DocumentConverterService.InfoPathView[] ConversionViewsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AutoTrustFormsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ProcessFullTrustFormsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StripDotNETCode {
            get {
                return this.StripDotNETCodeField;
            }
            set {
                if ((this.StripDotNETCodeField.Equals(value) != true)) {
                    this.StripDotNETCodeField = value;
                    this.RaisePropertyChanged("StripDotNETCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public bool StripDataObjects {
            get {
                return this.StripDataObjectsField;
            }
            set {
                if ((this.StripDataObjectsField.Equals(value) != true)) {
                    this.StripDataObjectsField = value;
                    this.RaisePropertyChanged("StripDataObjects");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public bool ConvertAttachments {
            get {
                return this.ConvertAttachmentsField;
            }
            set {
                if ((this.ConvertAttachmentsField.Equals(value) != true)) {
                    this.ConvertAttachmentsField = value;
                    this.RaisePropertyChanged("ConvertAttachments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public BethesdaConsentFormWCFSvc.DocumentConverterService.InfoPathView[] ConversionViews {
            get {
                return this.ConversionViewsField;
            }
            set {
                if ((object.ReferenceEquals(this.ConversionViewsField, value) != true)) {
                    this.ConversionViewsField = value;
                    this.RaisePropertyChanged("ConversionViews");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public bool AutoTrustForms {
            get {
                return this.AutoTrustFormsField;
            }
            set {
                if ((this.AutoTrustFormsField.Equals(value) != true)) {
                    this.AutoTrustFormsField = value;
                    this.RaisePropertyChanged("AutoTrustForms");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public bool ProcessFullTrustForms {
            get {
                return this.ProcessFullTrustFormsField;
            }
            set {
                if ((this.ProcessFullTrustFormsField.Equals(value) != true)) {
                    this.ProcessFullTrustFormsField = value;
                    this.RaisePropertyChanged("ProcessFullTrustForms");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConverterSpecificSettings_WordProcessing", Namespace="http://types.muhimbi.com/2010/11/22")]
    [System.SerializableAttribute()]
    public partial class ConverterSpecificSettings_WordProcessing : BethesdaConsentFormWCFSvc.DocumentConverterService.ConverterSpecificSettings {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaConsentFormWCFSvc.DocumentConverterService.RevisionsAndCommentsMarkupMode RevisionsAndCommentsMarkupModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaConsentFormWCFSvc.DocumentConverterService.RevisionsAndCommentsDisplayMode RevisionsAndCommentsDisplayModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ProcessDocumentTemplateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BethesdaConsentFormWCFSvc.DocumentConverterService.RevisionsAndCommentsMarkupMode RevisionsAndCommentsMarkupMode {
            get {
                return this.RevisionsAndCommentsMarkupModeField;
            }
            set {
                if ((this.RevisionsAndCommentsMarkupModeField.Equals(value) != true)) {
                    this.RevisionsAndCommentsMarkupModeField = value;
                    this.RaisePropertyChanged("RevisionsAndCommentsMarkupMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public BethesdaConsentFormWCFSvc.DocumentConverterService.RevisionsAndCommentsDisplayMode RevisionsAndCommentsDisplayMode {
            get {
                return this.RevisionsAndCommentsDisplayModeField;
            }
            set {
                if ((this.RevisionsAndCommentsDisplayModeField.Equals(value) != true)) {
                    this.RevisionsAndCommentsDisplayModeField = value;
                    this.RaisePropertyChanged("RevisionsAndCommentsDisplayMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public bool ProcessDocumentTemplate {
            get {
                return this.ProcessDocumentTemplateField;
            }
            set {
                if ((this.ProcessDocumentTemplateField.Equals(value) != true)) {
                    this.ProcessDocumentTemplateField = value;
                    this.RaisePropertyChanged("ProcessDocumentTemplate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConverterSpecificSettings_MSG", Namespace="http://types.muhimbi.com/2010/11/22")]
    [System.SerializableAttribute()]
    public partial class ConverterSpecificSettings_MSG : BethesdaConsentFormWCFSvc.DocumentConverterService.ConverterSpecificSettings {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ConvertAttachmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaperSizeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ConvertAttachments {
            get {
                return this.ConvertAttachmentsField;
            }
            set {
                if ((this.ConvertAttachmentsField.Equals(value) != true)) {
                    this.ConvertAttachmentsField = value;
                    this.RaisePropertyChanged("ConvertAttachments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaperSize {
            get {
                return this.PaperSizeField;
            }
            set {
                if ((object.ReferenceEquals(this.PaperSizeField, value) != true)) {
                    this.PaperSizeField = value;
                    this.RaisePropertyChanged("PaperSize");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PresentationsPrintOutputType", Namespace="http://schemas.datacontract.org/2004/07/Muhimbi.DocumentConverter.WebService.Data" +
        "")]
    public enum PresentationsPrintOutputType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Slides = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OneSlideHandouts = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TwoSlideHandouts = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ThreeSlideHandouts = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FourSlideHandouts = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SixSlideHandouts = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NineSlideHandouts = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotesPages = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Outline = 6,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CadConversionElement", Namespace="http://types.muhimbi.com/2010/11/22")]
    [System.SerializableAttribute()]
    public partial class CadConversionElement : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaConsentFormWCFSvc.DocumentConverterService.CadConversionElementType TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BethesdaConsentFormWCFSvc.DocumentConverterService.CadConversionElementType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CadEmptyLayoutDetectionMode", Namespace="http://schemas.datacontract.org/2004/07/Muhimbi.DocumentConverter.WebService.Data" +
        "")]
    public enum CadEmptyLayoutDetectionMode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Default = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SkipNone = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SkipEmptyLayouts = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SkipLayoutsWithoutViewports = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CadLayoutSortOrder", Namespace="http://schemas.datacontract.org/2004/07/Muhimbi.DocumentConverter.WebService.Data" +
        "")]
    public enum CadLayoutSortOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Default = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ascending = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Descending = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CadConversionElementType", Namespace="http://schemas.datacontract.org/2004/07/Muhimbi.DocumentConverter.WebService.Data" +
        "")]
    public enum CadConversionElementType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllLayouts = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NamedLayout = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TopView = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BottomView = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LeftView = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RightView = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FrontView = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BackView = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SW_IsometricView = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SE_IsometricView = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NE_IsometricView = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NW_IsometricView = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NamedView = 12,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HTMLScaleMode", Namespace="http://schemas.datacontract.org/2004/07/Muhimbi.DocumentConverter.WebService.Data" +
        "")]
    public enum HTMLScaleMode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Default = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FitWidth = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoScale = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InfoPathView", Namespace="http://types.muhimbi.com/2010/11/22")]
    [System.SerializableAttribute()]
    public partial class InfoPathView : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RevisionsAndCommentsMarkupMode", Namespace="http://schemas.datacontract.org/2004/07/Muhimbi.DocumentConverter.WebService.Data" +
        "")]
    public enum RevisionsAndCommentsMarkupMode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InLine = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Balloon = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Mixed = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RevisionsAndCommentsDisplayMode", Namespace="http://schemas.datacontract.org/2004/07/Muhimbi.DocumentConverter.WebService.Data" +
        "")]
    public enum RevisionsAndCommentsDisplayMode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FinalShowingMarkup = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Final = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OriginalShowingMarkup = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Original = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebServiceFaultException", Namespace="http://types.muhimbi.com/2009/10/06")]
    [System.SerializableAttribute()]
    public partial class WebServiceFaultException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaConsentFormWCFSvc.DocumentConverterService.WebServiceExceptionType ExceptionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ExceptionDetailsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BethesdaConsentFormWCFSvc.DocumentConverterService.WebServiceExceptionType ExceptionType {
            get {
                return this.ExceptionTypeField;
            }
            set {
                if ((this.ExceptionTypeField.Equals(value) != true)) {
                    this.ExceptionTypeField = value;
                    this.RaisePropertyChanged("ExceptionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string[] ExceptionDetails {
            get {
                return this.ExceptionDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionDetailsField, value) != true)) {
                    this.ExceptionDetailsField = value;
                    this.RaisePropertyChanged("ExceptionDetails");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebServiceExceptionType", Namespace="http://schemas.datacontract.org/2004/07/Muhimbi.DocumentConverter.WebService.Data" +
        "")]
    public enum WebServiceExceptionType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FileFormatNotSupported = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CorruptDocument = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorOpeningFile = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConversionTimeOut = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConverterNotResponding = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConverterNotInstalled = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InternalError = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OutputFormatNotSupported = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConfigurationError = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TrialExpired = 10,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProcessingOptions", Namespace="http://types.muhimbi.com/2009/10/06")]
    [System.SerializableAttribute()]
    public partial class ProcessingOptions : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaConsentFormWCFSvc.DocumentConverterService.SourceFile[] SourceFilesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaConsentFormWCFSvc.DocumentConverterService.MergeSettings MergeSettingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaConsentFormWCFSvc.DocumentConverterService.FileSplitOptions SplitOptionsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BethesdaConsentFormWCFSvc.DocumentConverterService.SourceFile[] SourceFiles {
            get {
                return this.SourceFilesField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceFilesField, value) != true)) {
                    this.SourceFilesField = value;
                    this.RaisePropertyChanged("SourceFiles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public BethesdaConsentFormWCFSvc.DocumentConverterService.MergeSettings MergeSettings {
            get {
                return this.MergeSettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.MergeSettingsField, value) != true)) {
                    this.MergeSettingsField = value;
                    this.RaisePropertyChanged("MergeSettings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public BethesdaConsentFormWCFSvc.DocumentConverterService.FileSplitOptions SplitOptions {
            get {
                return this.SplitOptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.SplitOptionsField, value) != true)) {
                    this.SplitOptionsField = value;
                    this.RaisePropertyChanged("SplitOptions");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MergeSettings", Namespace="http://types.muhimbi.com/2009/10/06")]
    [System.SerializableAttribute()]
    public partial class MergeSettings : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BreakOnErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaConsentFormWCFSvc.DocumentConverterService.PDFProfile PDFProfileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OpenPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaConsentFormWCFSvc.DocumentConverterService.Watermark[] WatermarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaConsentFormWCFSvc.DocumentConverterService.SecurityOptions SecurityOptionsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BreakOnError {
            get {
                return this.BreakOnErrorField;
            }
            set {
                if ((this.BreakOnErrorField.Equals(value) != true)) {
                    this.BreakOnErrorField = value;
                    this.RaisePropertyChanged("BreakOnError");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BethesdaConsentFormWCFSvc.DocumentConverterService.PDFProfile PDFProfile {
            get {
                return this.PDFProfileField;
            }
            set {
                if ((this.PDFProfileField.Equals(value) != true)) {
                    this.PDFProfileField = value;
                    this.RaisePropertyChanged("PDFProfile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string OpenPassword {
            get {
                return this.OpenPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.OpenPasswordField, value) != true)) {
                    this.OpenPasswordField = value;
                    this.RaisePropertyChanged("OpenPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string OwnerPassword {
            get {
                return this.OwnerPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerPasswordField, value) != true)) {
                    this.OwnerPasswordField = value;
                    this.RaisePropertyChanged("OwnerPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public BethesdaConsentFormWCFSvc.DocumentConverterService.Watermark[] Watermarks {
            get {
                return this.WatermarksField;
            }
            set {
                if ((object.ReferenceEquals(this.WatermarksField, value) != true)) {
                    this.WatermarksField = value;
                    this.RaisePropertyChanged("Watermarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public BethesdaConsentFormWCFSvc.DocumentConverterService.SecurityOptions SecurityOptions {
            get {
                return this.SecurityOptionsField;
            }
            set {
                if ((this.SecurityOptionsField.Equals(value) != true)) {
                    this.SecurityOptionsField = value;
                    this.RaisePropertyChanged("SecurityOptions");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileSplitOptions", Namespace="http://types.muhimbi.com/2009/10/06")]
    [System.SerializableAttribute()]
    public partial class FileSplitOptions : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaConsentFormWCFSvc.DocumentConverterService.FileSplitType FileSplitTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BatchSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BookmarkLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameTemplateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BethesdaConsentFormWCFSvc.DocumentConverterService.FileSplitType FileSplitType {
            get {
                return this.FileSplitTypeField;
            }
            set {
                if ((this.FileSplitTypeField.Equals(value) != true)) {
                    this.FileSplitTypeField = value;
                    this.RaisePropertyChanged("FileSplitType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int BatchSize {
            get {
                return this.BatchSizeField;
            }
            set {
                if ((this.BatchSizeField.Equals(value) != true)) {
                    this.BatchSizeField = value;
                    this.RaisePropertyChanged("BatchSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int BookmarkLevel {
            get {
                return this.BookmarkLevelField;
            }
            set {
                if ((this.BookmarkLevelField.Equals(value) != true)) {
                    this.BookmarkLevelField = value;
                    this.RaisePropertyChanged("BookmarkLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string FileNameTemplate {
            get {
                return this.FileNameTemplateField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameTemplateField, value) != true)) {
                    this.FileNameTemplateField = value;
                    this.RaisePropertyChanged("FileNameTemplate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SourceFile", Namespace="http://types.muhimbi.com/2009/10/06")]
    [System.SerializableAttribute()]
    public partial class SourceFile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] FileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaConsentFormWCFSvc.DocumentConverterService.OpenOptions OpenOptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaConsentFormWCFSvc.DocumentConverterService.ConversionSettings ConversionSettingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaConsentFormWCFSvc.DocumentConverterService.FileMergeSettings MergeSettingsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] File {
            get {
                return this.FileField;
            }
            set {
                if ((object.ReferenceEquals(this.FileField, value) != true)) {
                    this.FileField = value;
                    this.RaisePropertyChanged("File");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BethesdaConsentFormWCFSvc.DocumentConverterService.OpenOptions OpenOptions {
            get {
                return this.OpenOptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.OpenOptionsField, value) != true)) {
                    this.OpenOptionsField = value;
                    this.RaisePropertyChanged("OpenOptions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public BethesdaConsentFormWCFSvc.DocumentConverterService.ConversionSettings ConversionSettings {
            get {
                return this.ConversionSettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.ConversionSettingsField, value) != true)) {
                    this.ConversionSettingsField = value;
                    this.RaisePropertyChanged("ConversionSettings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public BethesdaConsentFormWCFSvc.DocumentConverterService.FileMergeSettings MergeSettings {
            get {
                return this.MergeSettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.MergeSettingsField, value) != true)) {
                    this.MergeSettingsField = value;
                    this.RaisePropertyChanged("MergeSettings");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileMergeSettings", Namespace="http://types.muhimbi.com/2009/10/06")]
    [System.SerializableAttribute()]
    public partial class FileMergeSettings : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TopLevelBookmarkField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TopLevelBookmark {
            get {
                return this.TopLevelBookmarkField;
            }
            set {
                if ((object.ReferenceEquals(this.TopLevelBookmarkField, value) != true)) {
                    this.TopLevelBookmarkField = value;
                    this.RaisePropertyChanged("TopLevelBookmark");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileSplitType", Namespace="http://schemas.datacontract.org/2004/07/Muhimbi.DocumentConverter.WebService.Data" +
        "")]
    public enum FileSplitType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ByNumberOfPages = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ByBookmarkLevel = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BatchResults", Namespace="http://types.muhimbi.com/2009/10/06")]
    [System.SerializableAttribute()]
    public partial class BatchResults : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaConsentFormWCFSvc.DocumentConverterService.BatchResult[] ResultsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BethesdaConsentFormWCFSvc.DocumentConverterService.BatchResult[] Results {
            get {
                return this.ResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultsField, value) != true)) {
                    this.ResultsField = value;
                    this.RaisePropertyChanged("Results");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BatchResult", Namespace="http://types.muhimbi.com/2009/10/06")]
    [System.SerializableAttribute()]
    public partial class BatchResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] FileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] File {
            get {
                return this.FileField;
            }
            set {
                if ((object.ReferenceEquals(this.FileField, value) != true)) {
                    this.FileField = value;
                    this.RaisePropertyChanged("File");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Configuration", Namespace="http://types.muhimbi.com/2009/10/06")]
    [System.SerializableAttribute()]
    public partial class Configuration : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConversionServerAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaConsentFormWCFSvc.DocumentConverterService.ConverterConfiguration[] ConvertersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConversionServerAddress {
            get {
                return this.ConversionServerAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.ConversionServerAddressField, value) != true)) {
                    this.ConversionServerAddressField = value;
                    this.RaisePropertyChanged("ConversionServerAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BethesdaConsentFormWCFSvc.DocumentConverterService.ConverterConfiguration[] Converters {
            get {
                return this.ConvertersField;
            }
            set {
                if ((object.ReferenceEquals(this.ConvertersField, value) != true)) {
                    this.ConvertersField = value;
                    this.RaisePropertyChanged("Converters");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConverterConfiguration", Namespace="http://types.muhimbi.com/2009/10/06")]
    [System.SerializableAttribute()]
    public partial class ConverterConfiguration : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConverterNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaConsentFormWCFSvc.DocumentConverterService.ConversionFidelities SupportedFidelityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] SupportedFileExtensionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] SupportedOutputFormatsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConverterName {
            get {
                return this.ConverterNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ConverterNameField, value) != true)) {
                    this.ConverterNameField = value;
                    this.RaisePropertyChanged("ConverterName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BethesdaConsentFormWCFSvc.DocumentConverterService.ConversionFidelities SupportedFidelity {
            get {
                return this.SupportedFidelityField;
            }
            set {
                if ((this.SupportedFidelityField.Equals(value) != true)) {
                    this.SupportedFidelityField = value;
                    this.RaisePropertyChanged("SupportedFidelity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] SupportedFileExtensions {
            get {
                return this.SupportedFileExtensionsField;
            }
            set {
                if ((object.ReferenceEquals(this.SupportedFileExtensionsField, value) != true)) {
                    this.SupportedFileExtensionsField = value;
                    this.RaisePropertyChanged("SupportedFileExtensions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string[] SupportedOutputFormats {
            get {
                return this.SupportedOutputFormatsField;
            }
            set {
                if ((object.ReferenceEquals(this.SupportedOutputFormatsField, value) != true)) {
                    this.SupportedOutputFormatsField = value;
                    this.RaisePropertyChanged("SupportedOutputFormats");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DiagnosticRequestItem", Namespace="http://types.muhimbi.com/2009/10/06")]
    [System.SerializableAttribute()]
    public partial class DiagnosticRequestItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConverterNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConverterName {
            get {
                return this.ConverterNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ConverterNameField, value) != true)) {
                    this.ConverterNameField = value;
                    this.RaisePropertyChanged("ConverterName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Diagnostics", Namespace="http://types.muhimbi.com/2009/10/06")]
    [System.SerializableAttribute()]
    public partial class Diagnostics : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaConsentFormWCFSvc.DocumentConverterService.DiagnosticResultItem[] ItemsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BethesdaConsentFormWCFSvc.DocumentConverterService.DiagnosticResultItem[] Items {
            get {
                return this.ItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemsField, value) != true)) {
                    this.ItemsField = value;
                    this.RaisePropertyChanged("Items");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DiagnosticResultItem", Namespace="http://types.muhimbi.com/2009/10/06")]
    [System.SerializableAttribute()]
    public partial class DiagnosticResultItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ValidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaConsentFormWCFSvc.DocumentConverterService.WebServiceExceptionType ExceptionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConverterNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Valid {
            get {
                return this.ValidField;
            }
            set {
                if ((this.ValidField.Equals(value) != true)) {
                    this.ValidField = value;
                    this.RaisePropertyChanged("Valid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public BethesdaConsentFormWCFSvc.DocumentConverterService.WebServiceExceptionType ExceptionType {
            get {
                return this.ExceptionTypeField;
            }
            set {
                if ((this.ExceptionTypeField.Equals(value) != true)) {
                    this.ExceptionTypeField = value;
                    this.RaisePropertyChanged("ExceptionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string ConverterName {
            get {
                return this.ConverterNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ConverterNameField, value) != true)) {
                    this.ConverterNameField = value;
                    this.RaisePropertyChanged("ConverterName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://services.muhimbi.com/2009/10/06", ConfigurationName="DocumentConverterService.DocumentConverterService")]
    public interface DocumentConverterService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.muhimbi.com/2009/10/06/DocumentConverterService/Convert", ReplyAction="http://services.muhimbi.com/2009/10/06/DocumentConverterService/ConvertResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BethesdaConsentFormWCFSvc.DocumentConverterService.WebServiceFaultException), Action="http://services.muhimbi.com/2009/10/06/DocumentConverterService/ConvertWebService" +
            "FaultExceptionFault", Name="WebServiceFaultException", Namespace="http://types.muhimbi.com/2009/10/06")]
        byte[] Convert(byte[] sourceFile, BethesdaConsentFormWCFSvc.DocumentConverterService.OpenOptions openOptions, BethesdaConsentFormWCFSvc.DocumentConverterService.ConversionSettings conversionSettings);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.muhimbi.com/2009/10/06/DocumentConverterService/ApplyWatermark", ReplyAction="http://services.muhimbi.com/2009/10/06/DocumentConverterService/ApplyWatermarkRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BethesdaConsentFormWCFSvc.DocumentConverterService.WebServiceFaultException), Action="http://services.muhimbi.com/2009/10/06/DocumentConverterService/ApplyWatermarkWeb" +
            "ServiceFaultExceptionFault", Name="WebServiceFaultException", Namespace="http://types.muhimbi.com/2009/10/06")]
        byte[] ApplyWatermark(byte[] sourceFile, BethesdaConsentFormWCFSvc.DocumentConverterService.OpenOptions openOptions, BethesdaConsentFormWCFSvc.DocumentConverterService.ConversionSettings conversionSettings);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.muhimbi.com/2009/10/06/DocumentConverterService/ApplySecurity", ReplyAction="http://services.muhimbi.com/2009/10/06/DocumentConverterService/ApplySecurityResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BethesdaConsentFormWCFSvc.DocumentConverterService.WebServiceFaultException), Action="http://services.muhimbi.com/2009/10/06/DocumentConverterService/ApplySecurityWebS" +
            "erviceFaultExceptionFault", Name="WebServiceFaultException", Namespace="http://types.muhimbi.com/2009/10/06")]
        byte[] ApplySecurity(byte[] sourceFile, BethesdaConsentFormWCFSvc.DocumentConverterService.OpenOptions openOptions, BethesdaConsentFormWCFSvc.DocumentConverterService.ConversionSettings conversionSettings);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.muhimbi.com/2009/10/06/DocumentConverterService/ProcessChanges", ReplyAction="http://services.muhimbi.com/2009/10/06/DocumentConverterService/ProcessChangesRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BethesdaConsentFormWCFSvc.DocumentConverterService.WebServiceFaultException), Action="http://services.muhimbi.com/2009/10/06/DocumentConverterService/ProcessChangesWeb" +
            "ServiceFaultExceptionFault", Name="WebServiceFaultException", Namespace="http://types.muhimbi.com/2009/10/06")]
        byte[] ProcessChanges(byte[] sourceFile, BethesdaConsentFormWCFSvc.DocumentConverterService.OpenOptions openOptions, BethesdaConsentFormWCFSvc.DocumentConverterService.ConversionSettings conversionSettings);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.muhimbi.com/2009/10/06/DocumentConverterService/ProcessBatch", ReplyAction="http://services.muhimbi.com/2009/10/06/DocumentConverterService/ProcessBatchRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BethesdaConsentFormWCFSvc.DocumentConverterService.WebServiceFaultException), Action="http://services.muhimbi.com/2009/10/06/DocumentConverterService/ProcessBatchWebSe" +
            "rviceFaultExceptionFault", Name="WebServiceFaultException", Namespace="http://types.muhimbi.com/2009/10/06")]
        BethesdaConsentFormWCFSvc.DocumentConverterService.BatchResults ProcessBatch(BethesdaConsentFormWCFSvc.DocumentConverterService.ProcessingOptions options);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.muhimbi.com/2009/10/06/DocumentConverterService/GetConfiguration", ReplyAction="http://services.muhimbi.com/2009/10/06/DocumentConverterService/GetConfigurationR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BethesdaConsentFormWCFSvc.DocumentConverterService.WebServiceFaultException), Action="http://services.muhimbi.com/2009/10/06/DocumentConverterService/GetConfigurationW" +
            "ebServiceFaultExceptionFault", Name="WebServiceFaultException", Namespace="http://types.muhimbi.com/2009/10/06")]
        BethesdaConsentFormWCFSvc.DocumentConverterService.Configuration GetConfiguration();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.muhimbi.com/2009/10/06/DocumentConverterService/GetDiagnostics", ReplyAction="http://services.muhimbi.com/2009/10/06/DocumentConverterService/GetDiagnosticsRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BethesdaConsentFormWCFSvc.DocumentConverterService.WebServiceFaultException), Action="http://services.muhimbi.com/2009/10/06/DocumentConverterService/GetDiagnosticsWeb" +
            "ServiceFaultExceptionFault", Name="WebServiceFaultException", Namespace="http://types.muhimbi.com/2009/10/06")]
        BethesdaConsentFormWCFSvc.DocumentConverterService.Diagnostics GetDiagnostics(BethesdaConsentFormWCFSvc.DocumentConverterService.DiagnosticRequestItem[] convertersToDiagnose);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface DocumentConverterServiceChannel : BethesdaConsentFormWCFSvc.DocumentConverterService.DocumentConverterService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DocumentConverterServiceClient : System.ServiceModel.ClientBase<BethesdaConsentFormWCFSvc.DocumentConverterService.DocumentConverterService>, BethesdaConsentFormWCFSvc.DocumentConverterService.DocumentConverterService {
        
        public DocumentConverterServiceClient() {
        }
        
        public DocumentConverterServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DocumentConverterServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DocumentConverterServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DocumentConverterServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public byte[] Convert(byte[] sourceFile, BethesdaConsentFormWCFSvc.DocumentConverterService.OpenOptions openOptions, BethesdaConsentFormWCFSvc.DocumentConverterService.ConversionSettings conversionSettings) {
            return base.Channel.Convert(sourceFile, openOptions, conversionSettings);
        }
        
        public byte[] ApplyWatermark(byte[] sourceFile, BethesdaConsentFormWCFSvc.DocumentConverterService.OpenOptions openOptions, BethesdaConsentFormWCFSvc.DocumentConverterService.ConversionSettings conversionSettings) {
            return base.Channel.ApplyWatermark(sourceFile, openOptions, conversionSettings);
        }
        
        public byte[] ApplySecurity(byte[] sourceFile, BethesdaConsentFormWCFSvc.DocumentConverterService.OpenOptions openOptions, BethesdaConsentFormWCFSvc.DocumentConverterService.ConversionSettings conversionSettings) {
            return base.Channel.ApplySecurity(sourceFile, openOptions, conversionSettings);
        }
        
        public byte[] ProcessChanges(byte[] sourceFile, BethesdaConsentFormWCFSvc.DocumentConverterService.OpenOptions openOptions, BethesdaConsentFormWCFSvc.DocumentConverterService.ConversionSettings conversionSettings) {
            return base.Channel.ProcessChanges(sourceFile, openOptions, conversionSettings);
        }
        
        public BethesdaConsentFormWCFSvc.DocumentConverterService.BatchResults ProcessBatch(BethesdaConsentFormWCFSvc.DocumentConverterService.ProcessingOptions options) {
            return base.Channel.ProcessBatch(options);
        }
        
        public BethesdaConsentFormWCFSvc.DocumentConverterService.Configuration GetConfiguration() {
            return base.Channel.GetConfiguration();
        }
        
        public BethesdaConsentFormWCFSvc.DocumentConverterService.Diagnostics GetDiagnostics(BethesdaConsentFormWCFSvc.DocumentConverterService.DiagnosticRequestItem[] convertersToDiagnose) {
            return base.Channel.GetDiagnostics(convertersToDiagnose);
        }
    }
}
